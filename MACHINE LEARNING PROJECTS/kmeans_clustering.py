# -*- coding: utf-8 -*-
"""KMeans Clustering(ML-11)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bcR5KaLGiRVDkzgeeHIEFN5yLIm5NXGx
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import sklearn
import seaborn as sns

df=pd.read_csv('/content/Mall_Customers.csv - Mall_Customers.csv.csv')

df.head()

df.describe()

df.duplicated().sum()

df.isnull().sum()

x=df.iloc[:,3:].values
x

from sklearn.cluster import KMeans
km=KMeans(n_clusters=5,random_state=2)
y_kmeans=km.fit_predict(x)

y_kmeans

km.inertia_
#provides the value for within clusters sum of squares(wcss)

"""# Elbow Method
## used to decide best value of K
"""

from sklearn.cluster import KMeans
wcss=[]
for i in range(1,16):
  km=KMeans(n_clusters=i,random_state=6)
  km.fit(x)
  wcss.append(km.inertia_)#how well dataset was clustered by KMeans

plt.figure(dpi=100)
sns.lineplot(range(1,16),wcss)
plt.title('Elbow Method')
plt.xlabel('k(No.of clusters)')
plt.ylabel('Within Clusters Sum of Squares')

x[y_kmeans == 0,0] #get all the  datapoints where cluster assigned to 0 with annual income

km.cluster_centers_

plt.figure(dpi=200)
sns.scatterplot(x[y_kmeans==0,0],x[y_kmeans==0,1],label='cluster 1')
sns.scatterplot(x[y_kmeans==1,0],x[y_kmeans==1,1],label='cluster 2')
sns.scatterplot(x[y_kmeans==2,0],x[y_kmeans==2,1],label='cluster 3')
sns.scatterplot(x[y_kmeans==3,0],x[y_kmeans==3,1],label='cluster 4')
sns.scatterplot(x[y_kmeans==4,0],x[y_kmeans==4,1],label='cluster 5')
plt.scatter(km.cluster_centers_[:,0], km.cluster_centers_[:,1],s = 50, c = 'black', label = 'Centroids')
plt.title('Customer Clusters')
plt.xlabel('Annual Income')
plt.ylabel('Spending Score(1-100)')
plt.legend(bbox_to_anchor=(1.04,1), loc="upper left")